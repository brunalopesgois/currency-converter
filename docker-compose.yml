version: '3'
services:
  api:
    build:
      dockerfile: ./docker/Dockerfile.dev
      context: .
    volumes:
      - .:/usr/app/
      - /usr/app/node_modules
    ports:
      - '3010:3000'
    networks:
      - common
    depends_on:
      - postgres
      - postgres-test
      - redis
  postgres:
    image: postgres:latest
    ports:
      - '5432:5432'
    volumes:
      - /data/postgres:/data/postgres
    environment:
      POSTGRES_USER: converter_user
      POSTGRES_PASSWORD: q1w2e3r4
      POSTGRES_DB: converter_db
    networks:
      - common
  postgres-test:
    image: postgres:latest
    ports:
      - '5433:5432'
    volumes:
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
      - /data/postgres-test:/data/postgres
    environment:
      POSTGRES_USER: test_converter_user
      POSTGRES_PASSWORD: q1w2e3r4
      POSTGRES_DB: test_converter_db
    networks:
      - common
  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass q1w2e3r4
    volumes:
      - redis:/data
    networks:
      - common
  datadog:
    image: gcr.io/datadoghq/agent:latest
    environment:
      - DD_API_KEY=9c9d7621334ee907c7bf0128e0f02f78
      - DD_SITE=datadoghq.com
      - DD_ENV=api
      - DD_DOGSTATSD_NON_LOCAL_TRAFFIC=false
      - DD_APM_ENABLED=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup:/host/sys/fs/cgroup:ro
networks:
  common: {}
volumes:
  redis:
    driver: local
